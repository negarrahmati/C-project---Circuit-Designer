#############################################################################
# Makefile for building: readinput
# Generated by qmake (2.01a) (Qt 4.6.2) on: Thu Feb 10 11:52:56 2011
# Project:  readinput.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\2010.02.1\qt\include\QtCore" -I"c:\Qt\2010.02.1\qt\include\QtGui" -I"c:\Qt\2010.02.1\qt\include" -I"c:\Qt\2010.02.1\qt\include\ActiveQt" -I"release" -I"." -I"c:\Qt\2010.02.1\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\2010.02.1\qt\lib" -lmingw32 -lqtmain -lQtGui4 -lQtCore4 
QMAKE         = c:\qt\2010.02.1\qt\bin\qmake.exe
IDC           = c:\Qt\2010.02.1\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		readinput.cpp \
		Xor.cpp \
		Xnor.cpp \
		Unary.cpp \
		Or.cpp \
		Operator.cpp \
		Not.cpp \
		Nor.cpp \
		Node.cpp \
		Nand.cpp \
		Binary.cpp \
		And.cpp \
		..\draglabel.cpp release\moc_mainwindow.cpp \
		release\moc_readinput.cpp
OBJECTS       = release/main.o \
		release/mainwindow.o \
		release/readinput.o \
		release/Xor.o \
		release/Xnor.o \
		release/Unary.o \
		release/Or.o \
		release/Operator.o \
		release/Not.o \
		release/Nor.o \
		release/Node.o \
		release/Nand.o \
		release/Binary.o \
		release/And.o \
		release/draglabel.o \
		release/moc_mainwindow.o \
		release/moc_readinput.o
DIST          = 
QMAKE_TARGET  = readinput
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = readinput.exe
DESTDIR_TARGET = release\readinput.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_mainwindow.h ui_readinput.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.readinput.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\Qt\2010.02.1\qt\mkspecs\win32-g++ -win32 -o Makefile.Release readinput.pro

dist:
	$(ZIP) readinput.zip $(SOURCES) $(DIST) readinput.pro c:\Qt\2010.02.1\qt\mkspecs\qconfig.pri c:\Qt\2010.02.1\qt\mkspecs\features\qt_functions.prf c:\Qt\2010.02.1\qt\mkspecs\features\qt_config.prf c:\Qt\2010.02.1\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2010.02.1\qt\mkspecs\features\default_pre.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\default_pre.prf c:\Qt\2010.02.1\qt\mkspecs\features\release.prf c:\Qt\2010.02.1\qt\mkspecs\features\debug_and_release.prf c:\Qt\2010.02.1\qt\mkspecs\features\default_post.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\default_post.prf c:\Qt\2010.02.1\qt\mkspecs\features\build_pass.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\rtti.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\exceptions.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\stl.prf c:\Qt\2010.02.1\qt\mkspecs\features\shared.prf c:\Qt\2010.02.1\qt\mkspecs\features\warn_on.prf c:\Qt\2010.02.1\qt\mkspecs\features\qt.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\thread.prf c:\Qt\2010.02.1\qt\mkspecs\features\moc.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\windows.prf c:\Qt\2010.02.1\qt\mkspecs\features\resources.prf c:\Qt\2010.02.1\qt\mkspecs\features\uic.prf c:\Qt\2010.02.1\qt\mkspecs\features\yacc.prf c:\Qt\2010.02.1\qt\mkspecs\features\lex.prf c:\Qt\2010.02.1\qt\mkspecs\features\include_source_dir.prf c:\Qt\2010.02.1\qt\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\mainwindow.o release\readinput.o release\Xor.o release\Xnor.o release\Unary.o release\Or.o release\Operator.o release\Not.o release\Nor.o release\Node.o release\Nand.o release\Binary.o release\And.o release\draglabel.o release\moc_mainwindow.o release\moc_readinput.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_mainwindow.cpp release/moc_readinput.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_mainwindow.cpp release\moc_readinput.cpp
release/moc_mainwindow.cpp: mytree.h \
		And.h \
		Binary.h \
		Operator.h \
		Node.h \
		Nand.h \
		Not.h \
		Unary.h \
		Or.h \
		Nor.h \
		Xnor.h \
		Xor.h \
		operand.h \
		mainwindow.h
	C:/Qt/2010.02.1/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o release\moc_mainwindow.cpp

release/moc_readinput.cpp: ui_readinput.h \
		readinput.h
	C:/Qt/2010.02.1/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 readinput.h -o release\moc_readinput.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_readinput.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_readinput.h
ui_mainwindow.h: mainwindow.ui
	c:\Qt\2010.02.1\qt\bin\uic.exe mainwindow.ui -o ui_mainwindow.h

ui_readinput.h: readinput.ui
	c:\Qt\2010.02.1\qt\bin\uic.exe readinput.ui -o ui_readinput.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

release/main.o: main.cpp mainwindow.h \
		mytree.h \
		And.h \
		Binary.h \
		Operator.h \
		Node.h \
		Nand.h \
		Not.h \
		Unary.h \
		Or.h \
		Nor.h \
		Xnor.h \
		Xor.h \
		operand.h \
		ui_readinput.h \
		readinput.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/mainwindow.o: mainwindow.cpp mainwindow.h \
		mytree.h \
		And.h \
		Binary.h \
		Operator.h \
		Node.h \
		Nand.h \
		Not.h \
		Unary.h \
		Or.h \
		Nor.h \
		Xnor.h \
		Xor.h \
		operand.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mainwindow.o mainwindow.cpp

release/readinput.o: readinput.cpp readinput.h \
		ui_readinput.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\readinput.o readinput.cpp

release/Xor.o: Xor.cpp Binary.h \
		Operator.h \
		Node.h \
		Xor.h \
		Not.h \
		Unary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Xor.o Xor.cpp

release/Xnor.o: Xnor.cpp Binary.h \
		Operator.h \
		Node.h \
		Xnor.h \
		Xor.h \
		Not.h \
		Unary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Xnor.o Xnor.cpp

release/Unary.o: Unary.cpp Operator.h \
		Node.h \
		Unary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Unary.o Unary.cpp

release/Or.o: Or.cpp Binary.h \
		Operator.h \
		Node.h \
		Or.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Or.o Or.cpp

release/Operator.o: Operator.cpp Node.h \
		Operator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Operator.o Operator.cpp

release/Not.o: Not.cpp Unary.h \
		Operator.h \
		Node.h \
		Not.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Not.o Not.cpp

release/Nor.o: Nor.cpp Binary.h \
		Operator.h \
		Node.h \
		Nor.h \
		Not.h \
		Unary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Nor.o Nor.cpp

release/Node.o: Node.cpp Node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Node.o Node.cpp

release/Nand.o: Nand.cpp Binary.h \
		Operator.h \
		Node.h \
		Nand.h \
		Not.h \
		Unary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Nand.o Nand.cpp

release/Binary.o: Binary.cpp Operator.h \
		Node.h \
		Binary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Binary.o Binary.cpp

release/And.o: And.cpp Binary.h \
		Operator.h \
		Node.h \
		And.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\And.o And.cpp

release/draglabel.o: ../draglabel.cpp ../draglabel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\draglabel.o ..\draglabel.cpp

release/moc_mainwindow.o: release/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_mainwindow.o release\moc_mainwindow.cpp

release/moc_readinput.o: release/moc_readinput.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_readinput.o release\moc_readinput.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

